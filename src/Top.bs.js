// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TodoItem$TodoReason = require("./TodoItem.bs.js");

var component = ReasonReact.reducerComponent("Top");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              var todosLength = Belt_List.length(state[/* todos */1]);
              var __x = state[/* todos */1];
              var todos = Belt_List.map(__x, (function (todo) {
                      return ReasonReact.element(todo[/* id */0], undefined, TodoItem$TodoReason.make(todo, /* array */[]));
                    }));
              var match = todosLength === 0;
              var main = match ? null : React.createElement("section", {
                      className: "main"
                    }, React.createElement("ul", {
                          className: "todo-list"
                        }, Belt_List.toArray(todos)));
              return React.createElement("div", undefined, React.createElement("header", {
                              className: "header"
                            }, React.createElement("h1", undefined, "todos"), React.createElement("input", {
                                  className: "new-todo",
                                  autoFocus: true,
                                  placeholder: "What needs to be done?",
                                  value: state[/* newTodo */0],
                                  onKeyDown: (function ($$event) {
                                      if ($$event.keyCode === 13) {
                                        $$event.preventDefault();
                                        return Curry._1(send, /* NewTodoEnterKeyDown */0);
                                      } else {
                                        return Curry._1(send, /* NewTodoOtherKeyDown */1);
                                      }
                                    }),
                                  onChange: (function ($$event) {
                                      return Curry._1(send, /* ChangeTodo */[$$event.target.value]);
                                    })
                                })), main);
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* newTodo */"",
                      /* todos : [] */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* NoUpdate */0;
                } else {
                  var todos = Pervasives.$at(state[/* todos */1], /* :: */[
                        /* record */[
                          /* id */Pervasives.string_of_float(Date.now()),
                          /* text */state[/* newTodo */0],
                          /* completed */false
                        ],
                        /* [] */0
                      ]);
                  return /* Update */Block.__(0, [/* record */[
                              /* newTodo */"",
                              /* todos */todos
                            ]]);
                }
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* newTodo */action[0],
                            /* todos */state[/* todos */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
